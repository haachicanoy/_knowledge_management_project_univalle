options(warn = -1)
p.chisq8 = matrix(0, nrow=ncol(OrgLidGC), ncol=ncol(OrgLidGC), byrow=T)
for(i in 1:ncol(OrgLidGC)){
for(j in 1:ncol(OrgLidGC)){
p.chisq8[i,j] = round(chisq.test(OrgLidGC[,i],OrgLidGC[,j])$p.value,3)
}
}; rm(i); rm(j)
diag(p.chisq8) = NA
colnames(p.chisq8) = colnames(OrgLidGC)
rownames(p.chisq8) = colnames(OrgLidGC)
color_scale = colorRampPalette(c("tomato3","lightyellow","lightseagreen"), space="rgb")(50)
png('../_results/_descriptive_analysis/chi_test_org_lid_GC.png', height = 7, width = 7, units = "in", res = 300)
heatmap.2(p.chisq8,
main = "Organizacion, Liderazgo, Gestion Conocimiento",
key.title = "Chi-square test",
key.xlab = "p-value",
Rowv = F,
Colv = NULL,
col = color_scale,
linecol = NULL,
tracecol = NULL,
density.info = "density",
denscol = "blue",
margins = c(11,11))
dev.off()
# Cramer's V test
options(warn = -1)
p.cramer8 = matrix(0, nrow = ncol(OrgLidGC), ncol = ncol(OrgLidGC), byrow = T)
for(i in 1:ncol(OrgLidGC)){
for(j in 1:ncol(OrgLidGC)){
p.cramer8[i,j] = round(lsr::cramersV(OrgLidGC[,i],OrgLidGC[,j]),3)
}
}; rm(i); rm(j)
# diag(p.cramer) = NA
colnames(p.cramer8) = colnames(OrgLidGC)
rownames(p.cramer8) = colnames(OrgLidGC)
png(file = '../_results/_descriptive_analysis/cramer_v_test_org_lid_GC.png', height = 7, width = 7, units = "in", res = 300)
corrplot::corrplot(corr = p.cramer8, method = "square")
dev.off()
color_scale = colorRampPalette(c("tomato3","lightyellow","lightseagreen"), space="rgb")(50)
png('../_results/_descriptive_analysis/chi_test_apr_tec_GC.png', height = 7, width = 7, units = "in", res = 300)
heatmap.2(p.chisq7,
main = "Aprendizaje, Tecnologia,\nGestion Conocimiento",
key.title = "Chi-square test",
key.xlab = "p-value",
Rowv = F,
Colv = NULL,
col = color_scale,
linecol = NULL,
tracecol = NULL,
density.info = "density",
denscol = "blue",
margins = c(11,11))
dev.off()
color_scale = colorRampPalette(c("tomato3","lightyellow","lightseagreen"), space="rgb")(50)
png('../_results/_descriptive_analysis/chi_test_org_lid_GC.png', height = 7, width = 7, units = "in", res = 300)
heatmap.2(p.chisq8,
main = "Organizacion, Liderazgo,\nGestion Conocimiento",
key.title = "Chi-square test",
key.xlab = "p-value",
Rowv = F,
Colv = NULL,
col = color_scale,
linecol = NULL,
tracecol = NULL,
density.info = "density",
denscol = "blue",
margins = c(11,11))
dev.off()
head(p.chisq7)
write.csv(x = p.chisq7, file = "../_results/_descriptive_analysis/p_chisq_Apr_Tec_GC.csv", row.names = 1)
write.csv(x = p.chisq7, file = "../_results/_descriptive_analysis/p_chisq_Apr_Tec_GC.csv", row.names = T)
write.csv(x = p.chisq8, file = "../_results/_descriptive_analysis/p_chisq_Org_Lid_GC.csv", row.names = T)
write.csv(x = p.cramer7, file = "../_results/_descriptive_analysis/p_cramer_Apr_Tec_GC.csv", row.names = T)
write.csv(x = p.cramer8, file = "../_results/_descriptive_analysis/p_cramer_Org_Lid_GC.csv", row.names = T)
# R options
options(warn = -1); options(scipen = 999)
suppressMessages(library(plspm))
install.packages("plspm")
options(warn = -1); options(scipen = 999)
# Load packages
suppressMessages(library(tidyverse))
suppressMessages(library(FactoMineR))
suppressMessages(library(factoextra))
suppressMessages(library(foreign))
suppressMessages(library(corrplot))
suppressMessages(library(polycor))
suppressMessages(library(psych))
suppressMessages(library(gplots))
suppressMessages(library(viridis))
suppressMessages(library(lsr))
suppressMessages(library(DescTools))
suppressMessages(library(plspm))
install.packages("lsr")
install.packages("DescTools")
suppressMessages(library(tidyverse))
suppressMessages(library(FactoMineR))
suppressMessages(library(factoextra))
suppressMessages(library(foreign))
suppressMessages(library(corrplot))
suppressMessages(library(polycor))
suppressMessages(library(psych))
suppressMessages(library(gplots))
suppressMessages(library(viridis))
suppressMessages(library(lsr))
suppressMessages(library(DescTools))
suppressMessages(library(plspm))
# ------------------------------------------------------- #
# Loading data
# ------------------------------------------------------- #
km_data <- read.spss(file = "../_data/Base GConocimiento PymeS  Valle_2017.sav", to.data.frame = T, use.value.labels = T) # F
names(km_data)
pilares <- km_data %>% select(P3_1:P3_8, P5_1:P9_6, P11_1:P13_16, P22_1:P25_5)
for(j in 1:ncol(pilares)){
pilares[,j] <- factor(pilares[,j], levels = c("Totalmente en desacuerdo",
"En desacuerdo",
"Ni de acuerdo ni en desacuerdo",
"De acuerdo",
"Totalmente de acuerdo"), ordered = T)
}; rm(j)
pilares %>% glimpse
pilares %>% str
suppressMessages(library(plspm))
options(warn = -1); options(scipen = 999)
# Load packages
suppressMessages(library(tidyverse))
suppressMessages(library(modelr))
suppressMessages(library(dplyr))
suppressMessages(library(purrr))
suppressMessages(library(broom))
suppressMessages(library(tidyr))
suppressMessages(library(ggplot2))
suppressMessages(library(FactoMineR))
suppressMessages(library(factoextra))
suppressMessages(library(foreign))
suppressMessages(library(haven))
suppressMessages(library(corrplot))
suppressMessages(library(polycor))
suppressMessages(library(psych))
suppressMessages(library(gplots))
suppressMessages(library(viridis))
suppressMessages(library(lsr))
suppressMessages(library(DescTools))
km_data <- read.spss(file = "../_data/Base GConocimiento PymeS  Valle_2017.sav", to.data.frame = T, use.value.labels = T) # F
names(km_data)
pilares <- km_data %>% select(P3_1:P3_8, P5_1:P9_6, P11_1:P13_16, P22_1:P25_5)
for(j in 1:ncol(pilares)){
pilares[,j] <- factor(pilares[,j], levels = c("Totalmente en desacuerdo",
"En desacuerdo",
"Ni de acuerdo ni en desacuerdo",
"De acuerdo",
"Totalmente de acuerdo"), ordered = T)
}; rm(j)
aprendizaje <- pilares %>% dplyr::select(P5_4, P5_5, P6_1, P6_2, P6_5, P7_2, P8_1, P13_13:P13_16)
aprendizaje %>% glimpse
cat.metrics <- function(var, var.name){
mode.var <- DescTools::Mode(x = var)[1]
entropy.var <- DescTools::Entropy(x = table(var), base = exp(1))/DescTools::Entropy(x = rep(24.8, 5), base = exp(1))
results <- data.frame(Variable = var.name, Mode = mode.var, Entropy = entropy.var)
return(results)
}
varList <- pilares %>% names %>% unique
varList
varMetrics <- lapply(1:length(varList), function(i){
var.name <- varList[i]
eval(parse(text = paste0('var <- pilares$', varList[i])))
return(cat.metrics(var = var, var.name = var.name))
})
varMetrics <- do.call(rbind, varMetrics)
View(varMetrics)
varMetrics %>% ggplot(aes(x = reorder(Variable, -Entropy), y = Entropy)) + geom_bar(stat = "identity") +
coord_flip() + theme_bw()
hist(varMetrics$Entropy)
library("plspm", lib.loc="~/R/win-library/3.4")
# load dataset satisfaction
data(satisfaction)
# path matrix
IMAG = c(0,0,0,0,0,0)
EXPE = c(1,0,0,0,0,0)
QUAL = c(0,1,0,0,0,0)
VAL = c(0,1,1,0,0,0)
SAT = c(1,1,1,1,0,0)
LOY = c(1,0,0,0,1,0)
sat_path = rbind(IMAG, EXPE, QUAL, VAL, SAT, LOY)
sat_path
colnames(sat_path) <- rownames(sat_path)
sat_path
myinner = matrix(c(0,0,0,0,0,0,1,1,0),
nrow=3, ncol=3, byrow=TRUE)
rownames(myinner) = c("ATTACK", "DEFENSE", "SUCCESS")
colnames(myinner) = c("ATTACK", "DEFENSE", "SUCCESS")
myinner
install.packages(c("cowplot", "keras", "reticulate", "rmarkdown", "stringi", "tensorflow", "timeDate"))
library(plspm)
#---------------------------------------------------------------------------------------------#
# pilares
pilar1<-km_data%>%select(P5_4, P5_5, P6_1, P6_2, P6_5, P7_2, P8_1, P13_13:P13_16,
P3_4, P5_6, P7_4, P7_5, P11_1:P11_5, P13_5, P13_6, P13_7, P13_8,
P9_1:P9_6)
pilar2<-km_data%>%select(P3_1:P3_3, P3_5:P3_8, P8_3, P8_4, P8_5, P13_1, P13_2, P13_3, P13_4,
P5_1:P5_3, P6_3, P6_4, P7_1, P7_3, P8_2, P13_9, P13_11,
P9_1:P9_6)
# R options
options(warn = -1); options(scipen = 999)
# Load packages
suppressMessages(library(tidyverse))
suppressMessages(library(modelr))
suppressMessages(library(dplyr))
suppressMessages(library(purrr))
suppressMessages(library(broom))
suppressMessages(library(tidyr))
suppressMessages(library(ggplot2))
suppressMessages(library(FactoMineR))
suppressMessages(library(factoextra))
suppressMessages(library(foreign))
suppressMessages(library(haven))
suppressMessages(library(corrplot))
suppressMessages(library(polycor))
suppressMessages(library(psych))
suppressMessages(library(gplots))
suppressMessages(library(viridis))
suppressMessages(library(lsr))
suppressMessages(library(DescTools))
# ------------------------------------------------------- #
# Loading data
# ------------------------------------------------------- #
km_data <- read.spss(file = "../_data/Base GConocimiento PymeS  Valle_2017.sav", to.data.frame = T, use.value.labels = T) # F
names(km_data)
pilares <- km_data %>% select(P3_1:P3_8, P5_1:P9_6, P11_1:P13_16, P22_1:P25_5)
for(j in 1:ncol(pilares)){
pilares[,j] <- factor(pilares[,j], levels = c("Totalmente en desacuerdo",
"En desacuerdo",
"Ni de acuerdo ni en desacuerdo",
"De acuerdo",
"Totalmente de acuerdo"), ordered = T)
}; rm(j)
pilares %>% glimpse
pilares %>% str
# load package "plspm"
library(plspm)
pilar1<-km_data%>%select(P5_4, P5_5, P6_1, P6_2, P6_5, P7_2, P8_1, P13_13:P13_16,
P3_4, P5_6, P7_4, P7_5, P11_1:P11_5, P13_5, P13_6, P13_7, P13_8,
P9_1:P9_6)
pilar2<-km_data%>%select(P3_1:P3_3, P3_5:P3_8, P8_3, P8_4, P8_5, P13_1, P13_2, P13_3, P13_4,
P5_1:P5_3, P6_3, P6_4, P7_1, P7_3, P8_2, P13_9, P13_11,
P9_1:P9_6)
myinner1 = matrix(c(0,0,0,0,0,0,1,1,0),
nrow=3, ncol=3, byrow=TRUE)
rownames(myinner1) = c("Aprendizaje", "Tecnologia", "G.Conocimiento")
colnames(myinner1) = c("Aprendizaje", "Tecnologia", "G.Conocimiento")
# Definir listado de variables
myouter1 = list(1:11, 11:24, 24:30)
# Definir modos
mymodes1 = c("A", "A", "A")
# Analisis PLS-PM
mypls1 = plspm(pilar1, myinner1, myouter1, mymodes1)
# Graficos de analisis PLS
plot(mypls1)
plot(mypls1, what="loadings")
myinner2 = matrix(c(0,0,0,0,0,0,1,1,0),
nrow=3, ncol=3, byrow=TRUE)
rownames(myinner2) = c("Liderazgo", "Organizacion", "G.Conocimiento")
colnames(myinner2) = c("Liderazgo", "Organizacion", "G.Conocimiento")
# Definir listado de variables
myouter2 = list(1:14, 14:24, 24:30)
# Definir modos
mymodes2 = c("A", "A", "A")
# Analisis PLS-PM
mypls2 = plspm(pilar2, myinner2, myouter2, mymodes2)
# Graficos de analisis PLS
plot(mypls2)
plot(mypls2, what="loadings")
install.packages(c("car", "circlize", "keras", "reticulate", "stringi", "tensorflow", "tm"))
options(warn = -1); options(scipen = 999); g <- gc(); rm(list = ls())
# Load packages
suppressMessages(library(tidyverse))
suppressMessages(library(FactoMineR))
suppressMessages(library(factoextra))
suppressMessages(library(foreign))
suppressMessages(library(corrplot))
suppressMessages(library(polycor))
suppressMessages(library(psych))
suppressMessages(library(gplots))
suppressMessages(library(viridis))
suppressMessages(library(lsr))
suppressMessages(library(DescTools))
suppressMessages(library(plspm))
suppressMessages(library(reshape))
# ------------------------------------------------------- #
# Loading data
# ------------------------------------------------------- #
km_data <- read.spss(file = "../_data/Base GConocimiento PymeS  Valle_2017.sav", to.data.frame = T, use.value.labels = T) # F
names(km_data)
# ------------------------------------------------------- #
# Model for fitting
# ------------------------------------------------------- #
# Aprendizaje -
#              -
#               -> Gestion conocimiento ---> Innovacion
#              -
# Tecnologia  -
# ------------------------------------------------------- #
km_df <- km_data %>% dplyr::select(P5_4, P5_5, P6_1, P6_2, P6_5, P7_2, P8_1, P13_13:P13_16, # Aprendizaje
P3_4, P5_6, P7_4, P7_5, P11_1:P11_5, P13_5, P13_6, P13_7, P13_8, # Tecnologia
P9_1:P9_6, # Gestion conocimiento
P10_1:P10A_11) # Innovacion
# for(j in 1:ncol(df_m1)){
#   if(length(unique(as.character(df_m1[,j]))) == 5){
#     df_m1[,j] <- factor(df_m1[,j], levels = c("Totalmente en desacuerdo",
#                                               "En desacuerdo",
#                                               "Ni de acuerdo ni en desacuerdo",
#                                               "De acuerdo",
#                                               "Totalmente de acuerdo"), ordered = T)
#   } else {
#     if(length(unique(as.character(df_m1[,j]))) == 4){
#       df_m1[,j] <- factor(df_m1[,j], levels = c("En desacuerdo",
#                                                 "Ni de acuerdo ni en desacuerdo",
#                                                 "De acuerdo",
#                                                 "Totalmente de acuerdo"), ordered = T)
#     }
#   }
# }; rm(j)
# table(unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length)))
# unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length))[which(unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length))==4)]
# ------------------------------------------------------- #
# Inner model
km_inner <- matrix(c(0,0,0,0,
0,0,0,0,
1,1,0,0,
0,0,1,0), ncol = 4, byrow = T)
rownames(km_inner) <- colnames(km_inner) <- c("Aprendizaje", "Tecnologia", "G.Conocimiento", "Innovacion")
innerplot(km_inner)
# List of variables
km_blocks <- list(1:11, 11:24, 24:30, 31:ncol(km_df))
# Modes
km_modes <- c("A", "A", "A", "A")
# Run PLS-PM
km_pls <- plspm(Data = km_df, path_matrix = km_inner, blocks = km_blocks, modes = km_modes, boot.val = TRUE, br = 1000)
# ------------------------------------------------------- #
# PLS-PM plots
# ------------------------------------------------------- #
# Outer model results
plot(km_pls)
km_scores <- km_pls$scores %>% as.data.frame
km_scores <- km_scores %>% tidyr::gather(key = Index, value = Value)
km_scores %>% ggplot(aes(x = Value, group = Index, colour = Index, fill = Index)) +
geom_density(alpha = .5) + facet_wrap(~Index) + theme_bw()
# Correlation between estimated scores
pairs(km_pls$scores, pch = 20, lower.panel = panel.smooth)
# Crossloadings plot
xloads <- melt(km_pls$crossloadings, id.vars = c("name", "block"), variable_name = "LV")
xloads %>% ggplot(aes(x = name, y = value, fill = block)) +
geom_hline(yintercept = 0, color = "gray75") +
geom_hline(yintercept = 0.5, color = "gray70", linetype = 2) +
geom_bar(stat = 'identity', position = 'dodge') +
facet_wrap(block ~ LV) +
theme(axis.text.x = element_text(angle = 90),
line = element_blank(),
plot.title = element_text(size = 12)) +
ggtitle("Crossloadings") +
xlab("Variables") + ylab("Correlation")
km_pls
km_pls$gof
km_pls %>% summary
install.packages(c("keras", "tensorflow"))
install.packages(c("digest", "dotCall64", "hexbin", "mgcv", "rpart", "tibble"))
install.packages("dotCall64")
install.packages("digest")
install.packages("hexbin")
install.packages("mgcv")
install.packages(c("digest", "dotCall64", "hexbin", "mgcv", "rpart", "tibble"))
# R options
options(warn = -1); options(scipen = 999); g <- gc(); rm(list = ls())
# Load packages
suppressMessages(library(tidyverse))
suppressMessages(library(factoextra))
suppressMessages(library(FactoMineR))
suppressMessages(library(foreign))
suppressMessages(library(corrplot))
suppressMessages(library(polycor))
suppressMessages(library(psych))
suppressMessages(library(gplots))
suppressMessages(library(viridis))
suppressMessages(library(lsr))
suppressMessages(library(DescTools))
suppressMessages(library(plspm))
suppressMessages(library(reshape))
# R options
options(warn = -1); options(scipen = 999); g <- gc(); rm(list = ls())
suppressMessages(library(tidyverse))
suppressMessages(library(FactoMineR))
suppressMessages(library(factoextra))
suppressMessages(library(foreign))
suppressMessages(library(corrplot))
suppressMessages(library(polycor))
suppressMessages(library(psych))
suppressMessages(library(gplots))
suppressMessages(library(viridis))
suppressMessages(library(lsr))
suppressMessages(library(DescTools))
suppressMessages(library(plspm))
suppressMessages(library(reshape))
# ------------------------------------------------------- #
# Loading data
# ------------------------------------------------------- #
km_data <- read.spss(file = "../_data/Base GConocimiento PymeS  Valle_2017.sav", to.data.frame = T, use.value.labels = T) # F
names(km_data)
# ------------------------------------------------------- #
# Model for fitting
# ------------------------------------------------------- #
# Aprendizaje -
#              -
#               -> Gestion conocimiento ---> Innovacion
#              -
# Tecnologia  -
# ------------------------------------------------------- #
km_df <- km_data %>% dplyr::select(P5_4, P5_5, P6_1, P6_2, P6_5, P7_2, P8_1, P13_13:P13_16, # Aprendizaje
P3_4, P5_6, P7_4, P7_5, P11_1:P11_5, P13_5, P13_6, P13_7, P13_8, # Tecnologia
P9_1:P9_6, # Gestion conocimiento
P10_1:P10A_11) # Innovacion
#                                                 "Ni de acuerdo ni en desacuerdo",
#                                                 "De acuerdo",
#                                                 "Totalmente de acuerdo"), ordered = T)
#     }
#   }
# }; rm(j)
# table(unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length)))
# unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length))[which(unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length))==4)]
# ------------------------------------------------------- #
# Inner model
km_inner <- matrix(c(0,0,0,0,
0,0,0,0,
1,1,0,0,
0,0,1,0), ncol = 4, byrow = T)
rownames(km_inner) <- colnames(km_inner) <- c("Aprendizaje", "Tecnologia", "G.Conocimiento", "Innovacion")
innerplot(km_inner)
# List of variables
km_blocks <- list(1:11, 12:24, 25:30, 31:ncol(km_df))
# Modes
km_modes <- c("A", "A", "A", "A")
?plspm
# Run PLS-PM
km_pls <- plspm(Data = km_df, path_matrix = km_inner,
blocks = km_blocks, modes = km_modes,
scheme = "path", boot.val = TRUE, br = 1000)
km_pls
# ------------------------------------------------------- #
# PLS-PM plots
# ------------------------------------------------------- #
# Outer model results
plot(km_pls)
# Run PLS-PM
set.seed(1235)
km_pls <- plspm(Data = km_df, path_matrix = km_inner,
blocks = km_blocks, modes = km_modes,
scheme = "path", boot.val = TRUE, br = 1000)
# ------------------------------------------------------- #
# PLS-PM plots
# ------------------------------------------------------- #
# Outer model results
plot(km_pls)
# Inner model results
plot(km_pls, what = "loadings")
plot(km_pls, what = "weights")
# Correlation between estimated scores
pairs(km_pls$scores, pch = 20, lower.panel = panel.smooth)
cor(km_pls$scores, method = "pearson")
cor(km_pls$scores, method = "spearman")
cor(km_pls$scores, method = "kendall")
# Estimated scores distribution
km_scores <- km_pls$scores %>% as.data.frame
km_scores <- km_scores %>% tidyr::gather(key = Index, value = Value)
km_scores %>% ggplot(aes(x = Value, group = Index, colour = Index, fill = Index)) +
geom_density(alpha = .5) + facet_wrap(~Index) + theme_bw()
xloads <- melt(km_pls$crossloadings, id.vars = c("name", "block"), variable_name = "LV")
xloads %>% ggplot(aes(x = name, y = value, fill = block)) +
geom_hline(yintercept = 0, color = "gray75") +
geom_hline(yintercept = 0.5, color = "gray70", linetype = 2) +
geom_bar(stat = 'identity', position = 'dodge') +
facet_wrap(block ~ LV) +
theme(axis.text.x = element_text(angle = 90),
line = element_blank(),
plot.title = element_text(size = 12)) +
ggtitle("Crossloadings") +
xlab("Variables") + ylab("Correlation")
summary(km_pls)
mean(km_pls$scores[,1])
sd(km_pls$scores[,1])
names(km_pls$scores)
colnames(km_pls$scores)
cov(km_pls$scores[,1], km_pls$scores[,3])
cor(km_pls$scores[,1], km_pls$scores[,3])
cor(km_pls$scores[,3], km_pls$scores[,1])
cov(km_pls$scores[,3], km_pls$scores[,1])
cov(km_pls$scores[,3], km_pls$scores[,1])
lm(km_pls$scores[,3] ~ km_pls$scores[,1] + km_pls$scores[,2])
?cov
var(1:5)
var(1:5, 1:5)
var(1:5, 2:6)
cov(km_pls$scores[,3], km_pls$scores[,1])
cor(km_pls$scores[,3], km_pls$scores[,1])
zx = c(-1.34, 0.45, -0.45, 1.34)
zy = c(-1.33, -0.49, 0.49, 1.33)
cov(zx, zy)
cov(zx, zy)/4
zx * zy
sum(zx * zy)/4
sum(km_pls$scores[,3] * km_pls$scores[,1])/124
sum(km_pls$scores[,3] * km_pls$scores[,1])/123
sum(zx * zy)/3
sum(zx * zy)/5
