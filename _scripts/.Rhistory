suppressMessages(library(plspm))
suppressMessages(library(reshape))
# ------------------------------------------------------- #
# Loading data
# ------------------------------------------------------- #
km_data <- read.spss(file = "../_data/Base GConocimiento PymeS  Valle_2017.sav", to.data.frame = T, use.value.labels = T) # F
names(km_data)
# ------------------------------------------------------- #
# Model for fitting
# ------------------------------------------------------- #
# Aprendizaje -
#              -
#               -> Gestion conocimiento ---> Innovacion
#              -
# Tecnologia  -
# ------------------------------------------------------- #
km_df <- km_data %>% dplyr::select(P5_4, P5_5, P6_1, P6_2, P6_5, P7_2, P8_1, P13_13:P13_16, # Aprendizaje
P3_4, P5_6, P7_4, P7_5, P11_1:P11_5, P13_5, P13_6, P13_7, P13_8, # Tecnologia
P9_1:P9_6, # Gestion conocimiento
P10_1:P10A_11) # Innovacion
#                                                 "Ni de acuerdo ni en desacuerdo",
#                                                 "De acuerdo",
#                                                 "Totalmente de acuerdo"), ordered = T)
#     }
#   }
# }; rm(j)
# table(unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length)))
# unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length))[which(unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length))==4)]
# ------------------------------------------------------- #
# Inner model
km_inner <- matrix(c(0,0,0,0,
0,0,0,0,
1,1,0,0,
0,0,1,0), ncol = 4, byrow = T)
rownames(km_inner) <- colnames(km_inner) <- c("Aprendizaje", "Tecnologia", "G.Conocimiento", "Innovacion")
innerplot(km_inner)
# List of variables
km_blocks <- list(1:11, 12:24, 25:30, 31:ncol(km_df))
# Modes
km_modes <- c("A", "A", "A", "A")
?plspm
# Run PLS-PM
km_pls <- plspm(Data = km_df, path_matrix = km_inner,
blocks = km_blocks, modes = km_modes,
scheme = "path", boot.val = TRUE, br = 1000)
km_pls
# ------------------------------------------------------- #
# PLS-PM plots
# ------------------------------------------------------- #
# Outer model results
plot(km_pls)
# Run PLS-PM
set.seed(1235)
km_pls <- plspm(Data = km_df, path_matrix = km_inner,
blocks = km_blocks, modes = km_modes,
scheme = "path", boot.val = TRUE, br = 1000)
# ------------------------------------------------------- #
# PLS-PM plots
# ------------------------------------------------------- #
# Outer model results
plot(km_pls)
# Inner model results
plot(km_pls, what = "loadings")
plot(km_pls, what = "weights")
# Correlation between estimated scores
pairs(km_pls$scores, pch = 20, lower.panel = panel.smooth)
cor(km_pls$scores, method = "pearson")
cor(km_pls$scores, method = "spearman")
cor(km_pls$scores, method = "kendall")
# Estimated scores distribution
km_scores <- km_pls$scores %>% as.data.frame
km_scores <- km_scores %>% tidyr::gather(key = Index, value = Value)
km_scores %>% ggplot(aes(x = Value, group = Index, colour = Index, fill = Index)) +
geom_density(alpha = .5) + facet_wrap(~Index) + theme_bw()
xloads <- melt(km_pls$crossloadings, id.vars = c("name", "block"), variable_name = "LV")
xloads %>% ggplot(aes(x = name, y = value, fill = block)) +
geom_hline(yintercept = 0, color = "gray75") +
geom_hline(yintercept = 0.5, color = "gray70", linetype = 2) +
geom_bar(stat = 'identity', position = 'dodge') +
facet_wrap(block ~ LV) +
theme(axis.text.x = element_text(angle = 90),
line = element_blank(),
plot.title = element_text(size = 12)) +
ggtitle("Crossloadings") +
xlab("Variables") + ylab("Correlation")
summary(km_pls)
mean(km_pls$scores[,1])
sd(km_pls$scores[,1])
names(km_pls$scores)
colnames(km_pls$scores)
cov(km_pls$scores[,1], km_pls$scores[,3])
cor(km_pls$scores[,1], km_pls$scores[,3])
cor(km_pls$scores[,3], km_pls$scores[,1])
cov(km_pls$scores[,3], km_pls$scores[,1])
cov(km_pls$scores[,3], km_pls$scores[,1])
lm(km_pls$scores[,3] ~ km_pls$scores[,1] + km_pls$scores[,2])
?cov
var(1:5)
var(1:5, 1:5)
var(1:5, 2:6)
cov(km_pls$scores[,3], km_pls$scores[,1])
cor(km_pls$scores[,3], km_pls$scores[,1])
zx = c(-1.34, 0.45, -0.45, 1.34)
zy = c(-1.33, -0.49, 0.49, 1.33)
cov(zx, zy)
cov(zx, zy)/4
zx * zy
sum(zx * zy)/4
sum(km_pls$scores[,3] * km_pls$scores[,1])/124
sum(km_pls$scores[,3] * km_pls$scores[,1])/123
sum(zx * zy)/3
sum(zx * zy)/5
options(warn = -1); options(scipen = 999); g <- gc(); rm(list = ls())
# Load packages
suppressMessages(library(tidyverse))
suppressMessages(library(FactoMineR))
suppressMessages(library(factoextra))
suppressMessages(library(foreign))
suppressMessages(library(corrplot))
suppressMessages(library(polycor))
suppressMessages(library(psych))
suppressMessages(library(gplots))
suppressMessages(library(viridis))
suppressMessages(library(lsr))
suppressMessages(library(DescTools))
suppressMessages(library(plspm))
suppressMessages(library(reshape))
# ------------------------------------------------------- #
# Loading data
# ------------------------------------------------------- #
km_data <- read.spss(file = "../_data/Base GConocimiento PymeS  Valle_2017.sav", to.data.frame = T, use.value.labels = T) # F
names(km_data)
# ------------------------------------------------------- #
# Model for fitting
# ------------------------------------------------------- #
# Aprendizaje -
#              -
#               -> Gestion conocimiento ---> Innovacion
#              -
# Tecnologia  -
# ------------------------------------------------------- #
km_df <- km_data %>% dplyr::select(P5_4, P5_5, P6_1, P6_2, P6_5, P7_2, P8_1, P13_13:P13_16, # Aprendizaje
P3_4, P5_6, P7_4, P7_5, P11_1:P11_5, P13_5, P13_6, P13_7, P13_8, # Tecnologia
P9_1:P9_6, # Gestion conocimiento
P10_1:P10A_11)
km_inner <- matrix(c(0,0,0,0,
0,0,0,0,
1,1,0,0,
0,0,1,0), ncol = 4, byrow = T)
rownames(km_inner) <- colnames(km_inner) <- c("Aprendizaje", "Tecnologia", "G.Conocimiento", "Innovacion")
innerplot(km_inner)
# List of variables
km_blocks <- list(1:11, 12:24, 25:30, 31:ncol(km_df))
# Modes
km_modes <- c("A", "A", "A", "A")
# Run PLS-PM
set.seed(1235)
km_pls <- plspm(Data = km_df, path_matrix = km_inner,
blocks = km_blocks, modes = km_modes,
scheme = "path", boot.val = TRUE, br = 500)
summary(km_pls)
summary1 <- dplyr::data_frame(Response = "Innovacion",
Predictors = "Aprendizaje, Tecnologia, Gestion conocimiento",
Model = km_pls)
summary1
summary1 <- dplyr::data_frame(Response = "Innovacion",
Predictors = "Aprendizaje, Tecnologia, Gestion conocimiento")
summary1
km_df <- km_data %>% dplyr::select(P5_1:P5_3, P6_3, P6_4, P7_1, P7_3, P8_2, P13_9, P13_11, # Organizacion
P3_1:P3_3, P3_5:P3_8, P8_3, P8_4, P8_5, P13_1, P13_2, P13_3, P13_4, # Liderazgo
P9_1:P9_6, # Gestion conocimiento
P10_1:P10A_11) # Innovacion
# for(j in 1:ncol(df_m1)){
#   if(length(unique(as.character(df_m1[,j]))) == 5){
#     df_m1[,j] <- factor(df_m1[,j], levels = c("Totalmente en desacuerdo",
#                                               "En desacuerdo",
#                                               "Ni de acuerdo ni en desacuerdo",
#                                               "De acuerdo",
#                                               "Totalmente de acuerdo"), ordered = T)
#   } else {
#     if(length(unique(as.character(df_m1[,j]))) == 4){
#       df_m1[,j] <- factor(df_m1[,j], levels = c("En desacuerdo",
#                                                 "Ni de acuerdo ni en desacuerdo",
#                                                 "De acuerdo",
#                                                 "Totalmente de acuerdo"), ordered = T)
#     }
#   }
# }; rm(j)
# table(unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length)))
# unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length))[which(unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length))==4)]
# ------------------------------------------------------- #
# Inner model
km_inner <- matrix(c(0,0,0,0,
0,0,0,0,
1,1,0,0,
0,0,1,0), ncol = 4, byrow = T)
rownames(km_inner) <- colnames(km_inner) <- c("Organizacion", "Liderazgo", "G.Conocimiento", "Innovacion")
innerplot(km_inner)
# List of variables
km_blocks <- list(1:10, 11:24, 25:30, 31:ncol(km_df))
# Modes
km_modes <- c("A", "A", "A", "A")
# Run PLS-PM
km_pls <- plspm(Data = km_df, path_matrix = km_inner,
blocks = km_blocks, modes = km_modes,
scheme = "path", boot.val = TRUE, br = 500)
summary2 <- dplyr::data_frame(Response = "Innovacion",
Predictors = "Organizacion, Liderazgo, Gestion conocimiento")
km_df <- km_data %>% dplyr::select(P5_4, P5_5, P6_1, P6_2, P6_5, P7_2, P8_1, P13_13:P13_16, # Aprendizaje
P3_4, P5_6, P7_4, P7_5, P11_1:P11_5, P13_5, P13_6, P13_7, P13_8, # Tecnologia
P9_1:P9_6, # Gestion conocimiento
P10_1:P10A_11) # Innovacion
# for(j in 1:ncol(df_m1)){
#   if(length(unique(as.character(df_m1[,j]))) == 5){
#     df_m1[,j] <- factor(df_m1[,j], levels = c("Totalmente en desacuerdo",
#                                               "En desacuerdo",
#                                               "Ni de acuerdo ni en desacuerdo",
#                                               "De acuerdo",
#                                               "Totalmente de acuerdo"), ordered = T)
#   } else {
#     if(length(unique(as.character(df_m1[,j]))) == 4){
#       df_m1[,j] <- factor(df_m1[,j], levels = c("En desacuerdo",
#                                                 "Ni de acuerdo ni en desacuerdo",
#                                                 "De acuerdo",
#                                                 "Totalmente de acuerdo"), ordered = T)
#     }
#   }
# }; rm(j)
# table(unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length)))
# unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length))[which(unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length))==4)]
# ------------------------------------------------------- #
# Inner model
km_inner <- matrix(c(0,0,0,0,
0,0,0,0,
1,1,0,0,
0,0,1,0), ncol = 4, byrow = T)
rownames(km_inner) <- colnames(km_inner) <- c("Aprendizaje", "Tecnologia", "G.Conocimiento", "Innovacion")
innerplot(km_inner)
# List of variables
km_blocks <- list(1:11, 12:24, 25:30, 31:ncol(km_df))
# Modes
km_modes <- c("A", "A", "A", "A")
# Run PLS-PM
set.seed(1235)
km_pls <- plspm(Data = km_df, path_matrix = km_inner,
blocks = km_blocks, modes = km_modes,
scheme = "path", boot.val = TRUE, br = 500)
summary1 <- dplyr::data_frame(Response = "Innovacion",
Predictors = "Aprendizaje, Tecnologia, Gestion conocimiento")
summary1 <- summary1 %>%
dplyr::mutate(Model = purrr::map(km_pls, function(x) x))
summary1
summary1 <- summary1 %>%
dplyr::mutate(Model = purrr::map(km_pls %>% list, function(x) x))
summary1
km_df <- km_data %>% dplyr::select(P5_1:P5_3, P6_3, P6_4, P7_1, P7_3, P8_2, P13_9, P13_11, # Organizacion
P3_1:P3_3, P3_5:P3_8, P8_3, P8_4, P8_5, P13_1, P13_2, P13_3, P13_4, # Liderazgo
P9_1:P9_6, # Gestion conocimiento
P10_1:P10A_11) # Innovacion
# for(j in 1:ncol(df_m1)){
#   if(length(unique(as.character(df_m1[,j]))) == 5){
#     df_m1[,j] <- factor(df_m1[,j], levels = c("Totalmente en desacuerdo",
#                                               "En desacuerdo",
#                                               "Ni de acuerdo ni en desacuerdo",
#                                               "De acuerdo",
#                                               "Totalmente de acuerdo"), ordered = T)
#   } else {
#     if(length(unique(as.character(df_m1[,j]))) == 4){
#       df_m1[,j] <- factor(df_m1[,j], levels = c("En desacuerdo",
#                                                 "Ni de acuerdo ni en desacuerdo",
#                                                 "De acuerdo",
#                                                 "Totalmente de acuerdo"), ordered = T)
#     }
#   }
# }; rm(j)
# table(unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length)))
# unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length))[which(unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length))==4)]
# ------------------------------------------------------- #
# Inner model
km_inner <- matrix(c(0,0,0,0,
0,0,0,0,
1,1,0,0,
0,0,1,0), ncol = 4, byrow = T)
rownames(km_inner) <- colnames(km_inner) <- c("Organizacion", "Liderazgo", "G.Conocimiento", "Innovacion")
innerplot(km_inner)
# List of variables
km_blocks <- list(1:10, 11:24, 25:30, 31:ncol(km_df))
# Modes
km_modes <- c("A", "A", "A", "A")
# Run PLS-PM
km_pls <- plspm(Data = km_df, path_matrix = km_inner,
blocks = km_blocks, modes = km_modes,
scheme = "path", boot.val = TRUE, br = 500)
summary2 <- dplyr::data_frame(Response = "Innovacion",
Predictors = "Organizacion, Liderazgo, Gestion conocimiento")
summary2 <- summary2 %>%
dplyr::mutate(Model = purrr::map(km_pls %>% list, function(x) x))
summary2
km_df <- km_data %>% dplyr::select(P5_4, P5_5, P6_1, P6_2, P6_5, P7_2, P8_1, P13_13:P13_16, # Aprendizaje
P3_4, P5_6, P7_4, P7_5, P11_1:P11_5, P13_5, P13_6, P13_7, P13_8, # Tecnologia
P5_1:P5_3, P6_3, P6_4, P7_1, P7_3, P8_2, P13_9, P13_11, # Organizacion
P3_1:P3_3, P3_5:P3_8, P8_3, P8_4, P8_5, P13_1, P13_2, P13_3, P13_4, # Liderazgo
P9_1:P9_6, # Gestion conocimiento
P10_1:P10A_11) # Innovacion
# for(j in 1:ncol(df_m1)){
#   if(length(unique(as.character(df_m1[,j]))) == 5){
#     df_m1[,j] <- factor(df_m1[,j], levels = c("Totalmente en desacuerdo",
#                                               "En desacuerdo",
#                                               "Ni de acuerdo ni en desacuerdo",
#                                               "De acuerdo",
#                                               "Totalmente de acuerdo"), ordered = T)
#   } else {
#     if(length(unique(as.character(df_m1[,j]))) == 4){
#       df_m1[,j] <- factor(df_m1[,j], levels = c("En desacuerdo",
#                                                 "Ni de acuerdo ni en desacuerdo",
#                                                 "De acuerdo",
#                                                 "Totalmente de acuerdo"), ordered = T)
#     }
#   }
# }; rm(j)
# table(unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length)))
# unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length))[which(unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length))==4)]
# ------------------------------------------------------- #
# Inner model
km_inner <- matrix(c(0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,1,1,1,0,0,
0,0,0,0,1,0), ncol = 6, byrow = T)
rownames(km_inner) <- colnames(km_inner) <- c("Aprendizaje", "Tecnologia", "Organizacion", "Liderazgo", "G.Conocimiento", "Innovacion")
innerplot(km_inner)
# List of variables
km_blocks <- list(1:11, 12:24, 25:34, 35:48, 49:54, 55:ncol(km_df))
# Modes
km_modes <- c("A", "A", "A", "A", "A", "A")
# Run PLS-PM
km_pls <- plspm(Data = km_df, path_matrix = km_inner,
blocks = km_blocks, modes = km_modes,
scheme = "path", boot.val = TRUE, br = 500)
summary3 <- dplyr::data_frame(Response = "Innovacion",
Predictors = "Aprendizaje, Tecnologia, Organizacion, Liderazgo, Gestion conocimiento")
summary3 <- summary3 %>%
dplyr::mutate(Model = purrr::map(km_pls %>% list, function(x) x))
summary3
finalSummary <- dplyr::rbind_all(summary1, summary2, summary3)
finalSummary <- dplyr::rbind(summary1, summary2, summary3)
finalSummary <- rbind(summary1, summary2, summary3)
finalSummary
km_df <- km_data %>% dplyr::select(P5_4, P5_5, P6_1, P6_2, P6_5, P7_2, P8_1, P13_13:P13_16, # Aprendizaje
P3_4, P5_6, P7_4, P7_5, P11_1:P11_5, P13_5, P13_6, P13_7, P13_8, # Tecnologia
P9_1:P9_6, # Gestion conocimiento
P10_1:P10A_11) # Innovacion
# for(j in 1:ncol(df_m1)){
#   if(length(unique(as.character(df_m1[,j]))) == 5){
#     df_m1[,j] <- factor(df_m1[,j], levels = c("Totalmente en desacuerdo",
#                                               "En desacuerdo",
#                                               "Ni de acuerdo ni en desacuerdo",
#                                               "De acuerdo",
#                                               "Totalmente de acuerdo"), ordered = T)
#   } else {
#     if(length(unique(as.character(df_m1[,j]))) == 4){
#       df_m1[,j] <- factor(df_m1[,j], levels = c("En desacuerdo",
#                                                 "Ni de acuerdo ni en desacuerdo",
#                                                 "De acuerdo",
#                                                 "Totalmente de acuerdo"), ordered = T)
#     }
#   }
# }; rm(j)
# table(unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length)))
# unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length))[which(unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length))==4)]
# ------------------------------------------------------- #
# Inner model
km_inner <- matrix(c(0,0,0,0,
0,0,0,0,
1,1,0,0,
0,0,1,0), ncol = 4, byrow = T)
rownames(km_inner) <- colnames(km_inner) <- c("Aprendizaje", "Tecnologia", "G.Conocimiento", "Innovacion")
innerplot(km_inner)
# List of variables
km_blocks <- list(1:11, 12:24, 25:30, 31:ncol(km_df))
# Modes
km_modes <- c("A", "A", "A", "A")
# Run PLS-PM
set.seed(1235)
km_pls <- plspm(Data = km_df, path_matrix = km_inner,
blocks = km_blocks, modes = km_modes,
scheme = "path", boot.val = TRUE, br = 500)
summary1 <- dplyr::data_frame(Response = "Innovacion",
Predictors = "Aprendizaje, Tecnologia, Gestion conocimiento")
summary1 <- summary1 %>%
dplyr::mutate(Model = purrr::map(km_pls %>% list, function(x) x))
km_df <- km_data %>% dplyr::select(P5_1:P5_3, P6_3, P6_4, P7_1, P7_3, P8_2, P13_9, P13_11, # Organizacion
P3_1:P3_3, P3_5:P3_8, P8_3, P8_4, P8_5, P13_1, P13_2, P13_3, P13_4, # Liderazgo
P9_1:P9_6, # Gestion conocimiento
P10_1:P10A_11) # Innovacion
# for(j in 1:ncol(df_m1)){
#   if(length(unique(as.character(df_m1[,j]))) == 5){
#     df_m1[,j] <- factor(df_m1[,j], levels = c("Totalmente en desacuerdo",
#                                               "En desacuerdo",
#                                               "Ni de acuerdo ni en desacuerdo",
#                                               "De acuerdo",
#                                               "Totalmente de acuerdo"), ordered = T)
#   } else {
#     if(length(unique(as.character(df_m1[,j]))) == 4){
#       df_m1[,j] <- factor(df_m1[,j], levels = c("En desacuerdo",
#                                                 "Ni de acuerdo ni en desacuerdo",
#                                                 "De acuerdo",
#                                                 "Totalmente de acuerdo"), ordered = T)
#     }
#   }
# }; rm(j)
# table(unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length)))
# unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length))[which(unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length))==4)]
# ------------------------------------------------------- #
# Inner model
km_inner <- matrix(c(0,0,0,0,
0,0,0,0,
1,1,0,0,
0,0,1,0), ncol = 4, byrow = T)
rownames(km_inner) <- colnames(km_inner) <- c("Organizacion", "Liderazgo", "G.Conocimiento", "Innovacion")
innerplot(km_inner)
# List of variables
km_blocks <- list(1:10, 11:24, 25:30, 31:ncol(km_df))
# Modes
km_modes <- c("A", "A", "A", "A")
# Run PLS-PM
set.seed(1235)
km_pls <- plspm(Data = km_df, path_matrix = km_inner,
blocks = km_blocks, modes = km_modes,
scheme = "path", boot.val = TRUE, br = 500)
summary2 <- dplyr::data_frame(Response = "Innovacion",
Predictors = "Organizacion, Liderazgo, Gestion conocimiento")
summary2 <- summary2 %>%
dplyr::mutate(Model = purrr::map(km_pls %>% list, function(x) x))
km_df <- km_data %>% dplyr::select(P5_4, P5_5, P6_1, P6_2, P6_5, P7_2, P8_1, P13_13:P13_16, # Aprendizaje
P3_4, P5_6, P7_4, P7_5, P11_1:P11_5, P13_5, P13_6, P13_7, P13_8, # Tecnologia
P5_1:P5_3, P6_3, P6_4, P7_1, P7_3, P8_2, P13_9, P13_11, # Organizacion
P3_1:P3_3, P3_5:P3_8, P8_3, P8_4, P8_5, P13_1, P13_2, P13_3, P13_4, # Liderazgo
P9_1:P9_6, # Gestion conocimiento
P10_1:P10A_11) # Innovacion
# for(j in 1:ncol(df_m1)){
#   if(length(unique(as.character(df_m1[,j]))) == 5){
#     df_m1[,j] <- factor(df_m1[,j], levels = c("Totalmente en desacuerdo",
#                                               "En desacuerdo",
#                                               "Ni de acuerdo ni en desacuerdo",
#                                               "De acuerdo",
#                                               "Totalmente de acuerdo"), ordered = T)
#   } else {
#     if(length(unique(as.character(df_m1[,j]))) == 4){
#       df_m1[,j] <- factor(df_m1[,j], levels = c("En desacuerdo",
#                                                 "Ni de acuerdo ni en desacuerdo",
#                                                 "De acuerdo",
#                                                 "Totalmente de acuerdo"), ordered = T)
#     }
#   }
# }; rm(j)
# table(unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length)))
# unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length))[which(unlist(lapply(apply(X = df_m1, MARGIN = 2, FUN = table), length))==4)]
# ------------------------------------------------------- #
# Inner model
km_inner <- matrix(c(0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,1,1,1,0,0,
0,0,0,0,1,0), ncol = 6, byrow = T)
rownames(km_inner) <- colnames(km_inner) <- c("Aprendizaje", "Tecnologia", "Organizacion", "Liderazgo", "G.Conocimiento", "Innovacion")
innerplot(km_inner)
# List of variables
km_blocks <- list(1:11, 12:24, 25:34, 35:48, 49:54, 55:ncol(km_df))
# Modes
km_modes <- c("A", "A", "A", "A", "A", "A")
# Run PLS-PM
set.seed(1235)
km_pls <- plspm(Data = km_df, path_matrix = km_inner,
blocks = km_blocks, modes = km_modes,
scheme = "path", boot.val = TRUE, br = 500)
summary3 <- dplyr::data_frame(Response = "Innovacion",
Predictors = "Aprendizaje, Tecnologia, Organizacion, Liderazgo, Gestion conocimiento")
summary3 <- summary3 %>%
dplyr::mutate(Model = purrr::map(km_pls %>% list, function(x) x))
finalSummary <- rbind(summary1, summary2, summary3)
rm(summary1, summary2, summary3)
finalSummary
saveRDS(object = finalSummary, file = "../_results/plspm_results.RDS")
plot(finalSummary$Model[[1]]$inner_model)
finalSummary$Model[[1]]$inner_model
plot(finalSummary$Model[[1]])
plot(finalSummary$Model[[2]])
plot(finalSummary$Model[[3]])
finalSummary$Model[[1]]$outer_model
finalSummary$Model[[1]]$inner_summary
finalSummary$Model[[1]]$inner_model
finalSummary$Model[[1]]$boot$paths
finalSummary$Model[[1]]$boot$rsq
finalSummary$Model[[1]]$boot$loadings
finalSummary$Model[[1]]$boot$total.efs
finalSummary$Model[[1]]$inner_summary
finalSummary$Model[[1]]$gof
finalSummary$Model[[2]]$gof
finalSummary$Model[[3]]$gof
finalSummary$Model[[3]]$inner_model
finalSummary$Model[[3]]$unidim
finalSummary$Model[[1]]$unidim
finalSummary$Model[[2]]$boot$paths
finalSummary$Model[[2]]$boot$rsq
finalSummary$Model[[2]]$unidim
finalSummary$Model[[3]]$boot$paths
finalSummary$Model[[3]]$boot$rsq
finalSummary$Model[[3]]$unidim
159*3000
